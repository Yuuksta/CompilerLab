Terminals unused in grammar

   TcmpNotEqual
   TleftParen
   TrightParen
   TleftBrace
   Tsemi
   TrightBrace
   Tdot


State 0 conflicts: 1 reduce/reduce
State 29 conflicts: 1 shift/reduce
State 34 conflicts: 3 shift/reduce
State 59 conflicts: 3 shift/reduce
State 60 conflicts: 3 shift/reduce
State 61 conflicts: 3 shift/reduce
State 62 conflicts: 3 shift/reduce
State 63 conflicts: 3 shift/reduce
State 64 conflicts: 3 shift/reduce
State 65 conflicts: 3 shift/reduce
State 66 conflicts: 3 shift/reduce
State 67 conflicts: 3 shift/reduce
State 68 conflicts: 3 shift/reduce
State 69 conflicts: 15 shift/reduce
State 70 conflicts: 3 shift/reduce
State 71 conflicts: 3 shift/reduce
State 83 conflicts: 1 shift/reduce
State 93 conflicts: 1 shift/reduce


Grammar

    0 $accept: Program $end

    1 Program: %empty
    2        | DecList StmtList

    3 DecList: %empty
    4        | Declare DecList

    5 Declare: VarDecl
    6        | FuncDecl

    7 VarDecl: Type Tidentifier

    8 VarDecList: VarDecl
    9           | VarDecl ',' VarDecList

   10 Type: Tint
   11     | Tchar
   12     | Tfloat

   13 FuncDecl: Type Tidentifier '(' VarDecList ')' StmtBlock
   14         | Tvoid Tidentifier '(' VarDecList ')' StmtBlock

   15 StmtBlock: %empty
   16          | '{' DecList StmtList '}'

   17 StmtList: %empty
   18         | Stmt StmtList

   19 Stmt: Expr
   20     | IfStmt
   21     | WhileStmt
   22     | ReturnStmt

   23 IfStmt: Tif '(' Expr ')' Stmt ElseStmt
   24       | Tif '(' Expr ')' '{' StmtList '}' ElseStmt

   25 ElseStmt: %empty
   26         | Telse Stmt
   27         | Telse '{' StmtList '}'

   28 WhileStmt: Twhile '(' Expr ')' Stmt
   29          | Twhile '(' Expr ')' '{' StmtList '}'

   30 ReturnStmt: Treturn Expr

   31 Expr: Expr Tassign Expr
   32     | Expr Tplus Expr
   33     | Expr Tminus Expr
   34     | Expr Tmul Expr
   35     | Expr Tdiv Expr
   36     | Expr TselfInc
   37     | Expr TselfMinus
   38     | Expr TlessThan Expr
   39     | Expr TlessThanEq Expr
   40     | Expr TmoreThan Expr
   41     | Expr TmoreThanEq Expr
   42     | Expr Tmod Expr
   43     | Expr TcmpEqual Expr
   44     | Expr Tor Expr
   45     | Expr Tand Expr
   46     | '(' Expr ')'
   47     | Tnot Expr
   48     | TintVal
   49     | TfloatVal
   50     | Tidentifier
   51     | TcharVal


Terminals, with rules where they appear

$end (0) 0
'(' (40) 13 14 23 24 28 29 46
')' (41) 13 14 23 24 28 29 46
',' (44) 9
'{' (123) 16 24 27 29
'}' (125) 16 24 27 29
error (256)
Tif (258) 23 24
Telse (259) 26 27
Twhile (260) 28 29
Treturn (261) 30
Tint (262) 10
Tfloat (263) 12
Tchar (264) 11
Tvoid (265) 14
Tidentifier (266) 7 13 14 50
TfloatVal (267) 49
TintVal (268) 48
Tassign (269) 31
TcmpEqual (270) 43
TcmpNotEqual (271)
TlessThan (272) 38
TlessThanEq (273) 39
TmoreThan (274) 40
TmoreThanEq (275) 41
TleftParen (276)
TrightParen (277)
TleftBrace (278)
Tsemi (279)
TrightBrace (280)
Tdot (281)
Tplus (282) 32
Tminus (283) 33
Tmul (284) 34
Tdiv (285) 35
Tmod (286) 42
Tand (287) 45
Tor (288) 44
TselfMinus (289) 37
TselfInc (290) 36
Tnot (291) 47
TcharVal (292) 51


Nonterminals, with rules where they appear

$accept (43)
    on left: 0
Program (44)
    on left: 1 2, on right: 0
DecList (45)
    on left: 3 4, on right: 2 4 16
Declare (46)
    on left: 5 6, on right: 4
VarDecl (47)
    on left: 7, on right: 5 8 9
VarDecList (48)
    on left: 8 9, on right: 9 13 14
Type (49)
    on left: 10 11 12, on right: 7 13
FuncDecl (50)
    on left: 13 14, on right: 6
StmtBlock (51)
    on left: 15 16, on right: 13 14
StmtList (52)
    on left: 17 18, on right: 2 16 18 24 27 29
Stmt (53)
    on left: 19 20 21 22, on right: 18 23 26 28
IfStmt (54)
    on left: 23 24, on right: 20
ElseStmt (55)
    on left: 25 26 27, on right: 23 24
WhileStmt (56)
    on left: 28 29, on right: 21
ReturnStmt (57)
    on left: 30, on right: 22
Expr (58)
    on left: 31 32 33 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48
    49 50 51, on right: 19 23 24 28 29 30 31 32 33 34 35 36 37 38 39
    40 41 42 43 44 45 46 47


State 0

    0 $accept: . Program $end

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3
    Tvoid   shift, and go to state 4

    $end      reduce using rule 1 (Program)
    $end      [reduce using rule 3 (DecList)]
    $default  reduce using rule 3 (DecList)

    Program   go to state 5
    DecList   go to state 6
    Declare   go to state 7
    VarDecl   go to state 8
    Type      go to state 9
    FuncDecl  go to state 10


State 1

   10 Type: Tint .

    $default  reduce using rule 10 (Type)


State 2

   12 Type: Tfloat .

    $default  reduce using rule 12 (Type)


State 3

   11 Type: Tchar .

    $default  reduce using rule 11 (Type)


State 4

   14 FuncDecl: Tvoid . Tidentifier '(' VarDecList ')' StmtBlock

    Tidentifier  shift, and go to state 11


State 5

    0 $accept: Program . $end

    $end  shift, and go to state 12


State 6

    2 Program: DecList . StmtList

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 22
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 7

    4 DecList: Declare . DecList

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3
    Tvoid   shift, and go to state 4

    $default  reduce using rule 3 (DecList)

    DecList   go to state 28
    Declare   go to state 7
    VarDecl   go to state 8
    Type      go to state 9
    FuncDecl  go to state 10


State 8

    5 Declare: VarDecl .

    $default  reduce using rule 5 (Declare)


State 9

    7 VarDecl: Type . Tidentifier
   13 FuncDecl: Type . Tidentifier '(' VarDecList ')' StmtBlock

    Tidentifier  shift, and go to state 29


State 10

    6 Declare: FuncDecl .

    $default  reduce using rule 6 (Declare)


State 11

   14 FuncDecl: Tvoid Tidentifier . '(' VarDecList ')' StmtBlock

    '('  shift, and go to state 30


State 12

    0 $accept: Program $end .

    $default  accept


State 13

   23 IfStmt: Tif . '(' Expr ')' Stmt ElseStmt
   24       | Tif . '(' Expr ')' '{' StmtList '}' ElseStmt

    '('  shift, and go to state 31


State 14

   28 WhileStmt: Twhile . '(' Expr ')' Stmt
   29          | Twhile . '(' Expr ')' '{' StmtList '}'

    '('  shift, and go to state 32


State 15

   30 ReturnStmt: Treturn . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 33


State 16

   50 Expr: Tidentifier .

    $default  reduce using rule 50 (Expr)


State 17

   49 Expr: TfloatVal .

    $default  reduce using rule 49 (Expr)


State 18

   48 Expr: TintVal .

    $default  reduce using rule 48 (Expr)


State 19

   47 Expr: Tnot . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 34


State 20

   51 Expr: TcharVal .

    $default  reduce using rule 51 (Expr)


State 21

   46 Expr: '(' . Expr ')'

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 35


State 22

    2 Program: DecList StmtList .

    $default  reduce using rule 2 (Program)


State 23

   18 StmtList: Stmt . StmtList

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 36
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 24

   20 Stmt: IfStmt .

    $default  reduce using rule 20 (Stmt)


State 25

   21 Stmt: WhileStmt .

    $default  reduce using rule 21 (Stmt)


State 26

   22 Stmt: ReturnStmt .

    $default  reduce using rule 22 (Stmt)


State 27

   19 Stmt: Expr .
   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    $default  reduce using rule 19 (Stmt)


State 28

    4 DecList: Declare DecList .

    $default  reduce using rule 4 (DecList)


State 29

    7 VarDecl: Type Tidentifier .
   13 FuncDecl: Type Tidentifier . '(' VarDecList ')' StmtBlock

    '('  shift, and go to state 52

    '('       [reduce using rule 7 (VarDecl)]
    $default  reduce using rule 7 (VarDecl)


State 30

   14 FuncDecl: Tvoid Tidentifier '(' . VarDecList ')' StmtBlock

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3

    VarDecl     go to state 53
    VarDecList  go to state 54
    Type        go to state 55


State 31

   23 IfStmt: Tif '(' . Expr ')' Stmt ElseStmt
   24       | Tif '(' . Expr ')' '{' StmtList '}' ElseStmt

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 56


State 32

   28 WhileStmt: Twhile '(' . Expr ')' Stmt
   29          | Twhile '(' . Expr ')' '{' StmtList '}'

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 57


State 33

   30 ReturnStmt: Treturn Expr .
   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    $default  reduce using rule 30 (ReturnStmt)


State 34

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr
   47     | Tnot Expr .

    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 47 (Expr)]
    TselfMinus  [reduce using rule 47 (Expr)]
    TselfInc    [reduce using rule 47 (Expr)]
    $default    reduce using rule 47 (Expr)


State 35

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr
   46     | '(' Expr . ')'

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51
    ')'          shift, and go to state 58


State 36

   18 StmtList: Stmt StmtList .

    $default  reduce using rule 18 (StmtList)


State 37

   31 Expr: Expr Tassign . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 59


State 38

   43 Expr: Expr TcmpEqual . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 60


State 39

   38 Expr: Expr TlessThan . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 61


State 40

   39 Expr: Expr TlessThanEq . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 62


State 41

   40 Expr: Expr TmoreThan . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 63


State 42

   41 Expr: Expr TmoreThanEq . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 64


State 43

   32 Expr: Expr Tplus . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 65


State 44

   33 Expr: Expr Tminus . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 66


State 45

   34 Expr: Expr Tmul . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 67


State 46

   35 Expr: Expr Tdiv . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 68


State 47

   42 Expr: Expr Tmod . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 69


State 48

   45 Expr: Expr Tand . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 70


State 49

   44 Expr: Expr Tor . Expr

    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    Expr  go to state 71


State 50

   37 Expr: Expr TselfMinus .

    $default  reduce using rule 37 (Expr)


State 51

   36 Expr: Expr TselfInc .

    $default  reduce using rule 36 (Expr)


State 52

   13 FuncDecl: Type Tidentifier '(' . VarDecList ')' StmtBlock

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3

    VarDecl     go to state 53
    VarDecList  go to state 72
    Type        go to state 55


State 53

    8 VarDecList: VarDecl .
    9           | VarDecl . ',' VarDecList

    ','  shift, and go to state 73

    $default  reduce using rule 8 (VarDecList)


State 54

   14 FuncDecl: Tvoid Tidentifier '(' VarDecList . ')' StmtBlock

    ')'  shift, and go to state 74


State 55

    7 VarDecl: Type . Tidentifier

    Tidentifier  shift, and go to state 75


State 56

   23 IfStmt: Tif '(' Expr . ')' Stmt ElseStmt
   24       | Tif '(' Expr . ')' '{' StmtList '}' ElseStmt
   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51
    ')'          shift, and go to state 76


State 57

   28 WhileStmt: Twhile '(' Expr . ')' Stmt
   29          | Twhile '(' Expr . ')' '{' StmtList '}'
   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51
    ')'          shift, and go to state 77


State 58

   46 Expr: '(' Expr ')' .

    $default  reduce using rule 46 (Expr)


State 59

   31 Expr: Expr . Tassign Expr
   31     | Expr Tassign Expr .
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    Tmod        [reduce using rule 31 (Expr)]
    TselfMinus  [reduce using rule 31 (Expr)]
    TselfInc    [reduce using rule 31 (Expr)]
    $default    reduce using rule 31 (Expr)


State 60

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   43     | Expr TcmpEqual Expr .
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tplus       shift, and go to state 43
    Tminus      shift, and go to state 44
    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 43 (Expr)]
    TselfMinus  [reduce using rule 43 (Expr)]
    TselfInc    [reduce using rule 43 (Expr)]
    $default    reduce using rule 43 (Expr)


State 61

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   38     | Expr TlessThan Expr .
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tplus       shift, and go to state 43
    Tminus      shift, and go to state 44
    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 38 (Expr)]
    TselfMinus  [reduce using rule 38 (Expr)]
    TselfInc    [reduce using rule 38 (Expr)]
    $default    reduce using rule 38 (Expr)


State 62

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   39     | Expr TlessThanEq Expr .
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tplus       shift, and go to state 43
    Tminus      shift, and go to state 44
    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 39 (Expr)]
    TselfMinus  [reduce using rule 39 (Expr)]
    TselfInc    [reduce using rule 39 (Expr)]
    $default    reduce using rule 39 (Expr)


State 63

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   40     | Expr TmoreThan Expr .
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tplus       shift, and go to state 43
    Tminus      shift, and go to state 44
    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 40 (Expr)]
    TselfMinus  [reduce using rule 40 (Expr)]
    TselfInc    [reduce using rule 40 (Expr)]
    $default    reduce using rule 40 (Expr)


State 64

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   41     | Expr TmoreThanEq Expr .
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tplus       shift, and go to state 43
    Tminus      shift, and go to state 44
    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 41 (Expr)]
    TselfMinus  [reduce using rule 41 (Expr)]
    TselfInc    [reduce using rule 41 (Expr)]
    $default    reduce using rule 41 (Expr)


State 65

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   32     | Expr Tplus Expr .
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 32 (Expr)]
    TselfMinus  [reduce using rule 32 (Expr)]
    TselfInc    [reduce using rule 32 (Expr)]
    $default    reduce using rule 32 (Expr)


State 66

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   33     | Expr Tminus Expr .
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tmul        shift, and go to state 45
    Tdiv        shift, and go to state 46
    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 33 (Expr)]
    TselfMinus  [reduce using rule 33 (Expr)]
    TselfInc    [reduce using rule 33 (Expr)]
    $default    reduce using rule 33 (Expr)


State 67

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   34     | Expr Tmul Expr .
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 34 (Expr)]
    TselfMinus  [reduce using rule 34 (Expr)]
    TselfInc    [reduce using rule 34 (Expr)]
    $default    reduce using rule 34 (Expr)


State 68

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   35     | Expr Tdiv Expr .
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tmod        shift, and go to state 47
    TselfMinus  shift, and go to state 50
    TselfInc    shift, and go to state 51

    Tmod        [reduce using rule 35 (Expr)]
    TselfMinus  [reduce using rule 35 (Expr)]
    TselfInc    [reduce using rule 35 (Expr)]
    $default    reduce using rule 35 (Expr)


State 69

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   42     | Expr Tmod Expr .
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr

    Tassign      shift, and go to state 37
    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    Tor          shift, and go to state 49
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    Tassign      [reduce using rule 42 (Expr)]
    TcmpEqual    [reduce using rule 42 (Expr)]
    TlessThan    [reduce using rule 42 (Expr)]
    TlessThanEq  [reduce using rule 42 (Expr)]
    TmoreThan    [reduce using rule 42 (Expr)]
    TmoreThanEq  [reduce using rule 42 (Expr)]
    Tplus        [reduce using rule 42 (Expr)]
    Tminus       [reduce using rule 42 (Expr)]
    Tmul         [reduce using rule 42 (Expr)]
    Tdiv         [reduce using rule 42 (Expr)]
    Tmod         [reduce using rule 42 (Expr)]
    Tand         [reduce using rule 42 (Expr)]
    Tor          [reduce using rule 42 (Expr)]
    TselfMinus   [reduce using rule 42 (Expr)]
    TselfInc     [reduce using rule 42 (Expr)]
    $default     reduce using rule 42 (Expr)


State 70

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   45     | Expr . Tand Expr
   45     | Expr Tand Expr .

    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    Tmod        [reduce using rule 45 (Expr)]
    TselfMinus  [reduce using rule 45 (Expr)]
    TselfInc    [reduce using rule 45 (Expr)]
    $default    reduce using rule 45 (Expr)


State 71

   31 Expr: Expr . Tassign Expr
   32     | Expr . Tplus Expr
   33     | Expr . Tminus Expr
   34     | Expr . Tmul Expr
   35     | Expr . Tdiv Expr
   36     | Expr . TselfInc
   37     | Expr . TselfMinus
   38     | Expr . TlessThan Expr
   39     | Expr . TlessThanEq Expr
   40     | Expr . TmoreThan Expr
   41     | Expr . TmoreThanEq Expr
   42     | Expr . Tmod Expr
   43     | Expr . TcmpEqual Expr
   44     | Expr . Tor Expr
   44     | Expr Tor Expr .
   45     | Expr . Tand Expr

    TcmpEqual    shift, and go to state 38
    TlessThan    shift, and go to state 39
    TlessThanEq  shift, and go to state 40
    TmoreThan    shift, and go to state 41
    TmoreThanEq  shift, and go to state 42
    Tplus        shift, and go to state 43
    Tminus       shift, and go to state 44
    Tmul         shift, and go to state 45
    Tdiv         shift, and go to state 46
    Tmod         shift, and go to state 47
    Tand         shift, and go to state 48
    TselfMinus   shift, and go to state 50
    TselfInc     shift, and go to state 51

    Tmod        [reduce using rule 44 (Expr)]
    TselfMinus  [reduce using rule 44 (Expr)]
    TselfInc    [reduce using rule 44 (Expr)]
    $default    reduce using rule 44 (Expr)


State 72

   13 FuncDecl: Type Tidentifier '(' VarDecList . ')' StmtBlock

    ')'  shift, and go to state 78


State 73

    9 VarDecList: VarDecl ',' . VarDecList

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3

    VarDecl     go to state 53
    VarDecList  go to state 79
    Type        go to state 55


State 74

   14 FuncDecl: Tvoid Tidentifier '(' VarDecList ')' . StmtBlock

    '{'  shift, and go to state 80

    $default  reduce using rule 15 (StmtBlock)

    StmtBlock  go to state 81


State 75

    7 VarDecl: Type Tidentifier .

    $default  reduce using rule 7 (VarDecl)


State 76

   23 IfStmt: Tif '(' Expr ')' . Stmt ElseStmt
   24       | Tif '(' Expr ')' . '{' StmtList '}' ElseStmt

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21
    '{'          shift, and go to state 82

    Stmt        go to state 83
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 77

   28 WhileStmt: Twhile '(' Expr ')' . Stmt
   29          | Twhile '(' Expr ')' . '{' StmtList '}'

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21
    '{'          shift, and go to state 84

    Stmt        go to state 85
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 78

   13 FuncDecl: Type Tidentifier '(' VarDecList ')' . StmtBlock

    '{'  shift, and go to state 80

    $default  reduce using rule 15 (StmtBlock)

    StmtBlock  go to state 86


State 79

    9 VarDecList: VarDecl ',' VarDecList .

    $default  reduce using rule 9 (VarDecList)


State 80

   16 StmtBlock: '{' . DecList StmtList '}'

    Tint    shift, and go to state 1
    Tfloat  shift, and go to state 2
    Tchar   shift, and go to state 3
    Tvoid   shift, and go to state 4

    $default  reduce using rule 3 (DecList)

    DecList   go to state 87
    Declare   go to state 7
    VarDecl   go to state 8
    Type      go to state 9
    FuncDecl  go to state 10


State 81

   14 FuncDecl: Tvoid Tidentifier '(' VarDecList ')' StmtBlock .

    $default  reduce using rule 14 (FuncDecl)


State 82

   24 IfStmt: Tif '(' Expr ')' '{' . StmtList '}' ElseStmt

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 88
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 83

   23 IfStmt: Tif '(' Expr ')' Stmt . ElseStmt

    Telse  shift, and go to state 89

    Telse     [reduce using rule 25 (ElseStmt)]
    $default  reduce using rule 25 (ElseStmt)

    ElseStmt  go to state 90


State 84

   29 WhileStmt: Twhile '(' Expr ')' '{' . StmtList '}'

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 91
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 85

   28 WhileStmt: Twhile '(' Expr ')' Stmt .

    $default  reduce using rule 28 (WhileStmt)


State 86

   13 FuncDecl: Type Tidentifier '(' VarDecList ')' StmtBlock .

    $default  reduce using rule 13 (FuncDecl)


State 87

   16 StmtBlock: '{' DecList . StmtList '}'

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 92
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 88

   24 IfStmt: Tif '(' Expr ')' '{' StmtList . '}' ElseStmt

    '}'  shift, and go to state 93


State 89

   26 ElseStmt: Telse . Stmt
   27         | Telse . '{' StmtList '}'

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21
    '{'          shift, and go to state 94

    Stmt        go to state 95
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 90

   23 IfStmt: Tif '(' Expr ')' Stmt ElseStmt .

    $default  reduce using rule 23 (IfStmt)


State 91

   29 WhileStmt: Twhile '(' Expr ')' '{' StmtList . '}'

    '}'  shift, and go to state 96


State 92

   16 StmtBlock: '{' DecList StmtList . '}'

    '}'  shift, and go to state 97


State 93

   24 IfStmt: Tif '(' Expr ')' '{' StmtList '}' . ElseStmt

    Telse  shift, and go to state 89

    Telse     [reduce using rule 25 (ElseStmt)]
    $default  reduce using rule 25 (ElseStmt)

    ElseStmt  go to state 98


State 94

   27 ElseStmt: Telse '{' . StmtList '}'

    Tif          shift, and go to state 13
    Twhile       shift, and go to state 14
    Treturn      shift, and go to state 15
    Tidentifier  shift, and go to state 16
    TfloatVal    shift, and go to state 17
    TintVal      shift, and go to state 18
    Tnot         shift, and go to state 19
    TcharVal     shift, and go to state 20
    '('          shift, and go to state 21

    $default  reduce using rule 17 (StmtList)

    StmtList    go to state 99
    Stmt        go to state 23
    IfStmt      go to state 24
    WhileStmt   go to state 25
    ReturnStmt  go to state 26
    Expr        go to state 27


State 95

   26 ElseStmt: Telse Stmt .

    $default  reduce using rule 26 (ElseStmt)


State 96

   29 WhileStmt: Twhile '(' Expr ')' '{' StmtList '}' .

    $default  reduce using rule 29 (WhileStmt)


State 97

   16 StmtBlock: '{' DecList StmtList '}' .

    $default  reduce using rule 16 (StmtBlock)


State 98

   24 IfStmt: Tif '(' Expr ')' '{' StmtList '}' ElseStmt .

    $default  reduce using rule 24 (IfStmt)


State 99

   27 ElseStmt: Telse '{' StmtList . '}'

    '}'  shift, and go to state 100


State 100

   27 ElseStmt: Telse '{' StmtList '}' .

    $default  reduce using rule 27 (ElseStmt)
